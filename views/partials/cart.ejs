<main class="container mt-5">
  <h1 class="text-center">Cart Page</h1>
  <p class="mt-4">Your selected items:</p>
  <!-- Cart Items Table -->
  <table class="table table-striped">
    <thead>
      <tr>
        <th scope="col">Product</th>
        <th scope="col">Quantity</th>
        <th scope="col">Price</th>
        <th scope="col">Total</th>
        <th scope="col">Action</th>
      </tr>
    </thead>
    <tbody>
      <% if (cartItems && cartItems.length > 0) { %>
        <% cartItems.forEach(item => { %>
          <tr>
            <td><%= item.name %></td>
            <td>
              <div class="d-flex align-items-center">
                <button class="btn btn-secondary btn-sm me-2 decrease-quantity" data-id="<%= item.id %>">
                  <i class="fas fa-minus"></i>
                </button>
                <span class="quantity-value" id="quantity-<%= item.id %>"><%= item.quantity %></span>
                <button class="btn btn-secondary btn-sm ms-2 increase-quantity" data-id="<%= item.id %>">
                  <i class="fas fa-plus"></i>
                </button>
              </div>
            </td>
            <td><%= item.price.toFixed(2) %> PHP</td>
            <td id="total-<%= item.id %>"><%= (item.price * item.quantity).toFixed(2) %> PHP</td>
            <td><button class="btn btn-danger" data-id="<%= item.id %>">Remove</button></td>
          </tr>
        <% }); %>
      <% } else { %>
        <tr>
          <td colspan="5" class="text-center">No items in the cart.</td>
        </tr>
      <% } %>
    </tbody>
  </table>
  <div class="text-right">
    <h4>Total: <span id="cart-total"><%= cartItems.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2) %></span> PHP</h4>
    <button id="checkout-button" class="btn btn-black">Proceed to Checkout</button>
  </div>
</main>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<style>
  .btn-black {
    background-color: black;
    color: white;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Checkout button event listener
    document.getElementById('checkout-button').addEventListener('click', function () {
      try {
        const cartItems = Array.from(document.querySelectorAll('tbody tr'));
        const totalAmount = parseFloat(document.getElementById('cart-total').textContent);
        const totalItems = cartItems.reduce((sum, row) => {
          const quantity = parseInt(row.querySelector('.quantity-value').textContent);
          return sum + quantity;
        }, 0);

        localStorage.setItem('totalAmount', totalAmount.toFixed(2));
        localStorage.setItem('totalItems', totalItems.toString());
        window.location.href = '/checkout';
      } catch (error) {
        console.error('Checkout process error:', error);
      }
    });

    function updateTotal() {
      try {
        let total = 0;
        document.querySelectorAll('tbody tr').forEach(row => {
          const quantity = parseInt(row.querySelector('.quantity-value').textContent);
          const price = parseFloat(row.querySelector('td:nth-child(3)').textContent);
          const itemTotal = quantity * price;
          row.querySelector('td:nth-child(4)').textContent = itemTotal.toFixed(2) + ' PHP';
          total += itemTotal;
        });
        document.getElementById('cart-total').textContent = total.toFixed(2);
      } catch (error) {
        console.error('Error updating total:', error);
      }
    }

    document.querySelectorAll('.increase-quantity').forEach(button => {
      button.addEventListener('click', function () {
        try {
          const itemId = this.getAttribute('data-id');
          const quantityDisplay = document.getElementById(`quantity-${itemId}`);
          let currentQuantity = parseInt(quantityDisplay.textContent);
          currentQuantity++;
          quantityDisplay.textContent = currentQuantity;

          updateCart(itemId, currentQuantity);
          updateTotal();
        } catch (error) {
          console.error('Error increasing quantity:', error);
        }
      });
    });

    document.querySelectorAll('.decrease-quantity').forEach(button => {
      button.addEventListener('click', function () {
        try {
          const itemId = this.getAttribute('data-id');
          const quantityDisplay = document.getElementById(`quantity-${itemId}`);
          let currentQuantity = parseInt(quantityDisplay.textContent);
          
          if (currentQuantity > 1) {
            currentQuantity--;
            quantityDisplay.textContent = currentQuantity;

            updateCart(itemId, currentQuantity);
            updateTotal();
          }
        } catch (error) {
          console.error('Error decreasing quantity:', error);
        }
      });
    });

    document.querySelectorAll('.btn-danger').forEach(button => {
      button.addEventListener('click', function () {
        try {
          const cartId = this.getAttribute('data-id');
          removeFromCart(cartId);
        } catch (error) {
          console.error('Error removing item:', error);
        }
      });
    });

    function updateCart(cartId, quantity) {
      fetch('/cart/update', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ cart_id: cartId, quantity: quantity }),
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        console.log('Success:', data);
      })
      .catch(error => {
        console.error('Error updating cart:', error);
      });
    }

    function removeFromCart(cartId) {
      fetch(`/cart/remove/${cartId}`, {
        method: 'POST',
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        location.reload();
      })
      .catch(error => {
        console.error('Error removing item from cart:', error);
      });
    }
  });
</script>
